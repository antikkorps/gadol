---
// src/components/Hero.astro
---

<section class="relative min-h-screen flex items-center justify-center pt-20 overflow-hidden">
  <!-- Background Animation -->
  <div class="absolute inset-0 opacity-20">
    <svg class="w-full h-full" viewBox="0 0 1000 1000" xmlns="http://www.w3.org/2000/svg">
      <defs>
        <linearGradient id="grad1" x1="0%" y1="0%" x2="100%" y2="100%">
          <stop offset="0%" style="stop-color:#3B82F6;stop-opacity:0.3" />
          <stop offset="100%" style="stop-color:#8B5CF6;stop-opacity:0.3" />
        </linearGradient>
      </defs>
      <g class="floating-particles">
        <circle cx="100" cy="100" r="2" fill="url(#grad1)" class="particle">
          <animateTransform
            attributeName="transform"
            attributeType="XML"
            type="translate"
            values="0,0; 50,30; 0,0"
            dur="6s"
            repeatCount="indefinite"/>
        </circle>
        <circle cx="200" cy="300" r="1.5" fill="url(#grad1)" class="particle">
          <animateTransform
            attributeName="transform"
            attributeType="XML"
            type="translate"
            values="0,0; -30,50; 0,0"
            dur="8s"
            repeatCount="indefinite"/>
        </circle>
        <circle cx="800" cy="200" r="2.5" fill="url(#grad1)" class="particle">
          <animateTransform
            attributeName="transform"
            attributeType="XML"
            type="translate"
            values="0,0; 40,-20; 0,0"
            dur="7s"
            repeatCount="indefinite"/>
        </circle>
        <circle cx="600" cy="700" r="1" fill="url(#grad1)" class="particle">
          <animateTransform
            attributeName="transform"
            attributeType="XML"
            type="translate"
            values="0,0; -20,40; 0,0"
            dur="9s"
            repeatCount="indefinite"/>
        </circle>
        <!-- Code-like lines -->
        <path d="M50,400 Q200,350 350,400 T650,400" stroke="url(#grad1)" stroke-width="1" fill="none" opacity="0.4">
          <animate attributeName="stroke-dasharray" values="0,1000; 50,950; 0,1000" dur="10s" repeatCount="indefinite"/>
        </path>
        <path d="M100,600 Q400,550 700,600 T900,600" stroke="url(#grad1)" stroke-width="1" fill="none" opacity="0.3">
          <animate attributeName="stroke-dasharray" values="0,1000; 70,930; 0,1000" dur="12s" repeatCount="indefinite"/>
        </path>
      </g>
    </svg>
  </div>

  <div class="container mx-auto px-6 text-center relative z-10">
    <!-- Main Content -->
    <div class="max-w-4xl mx-auto">
      <h1 id="hero-title" class="text-5xl md:text-7xl font-bold mb-6 bg-gradient-to-r from-blue-400 via-purple-500 to-pink-500 bg-clip-text text-transparent opacity-0 gsap-ready">
        L'IA, enfin à votre portée.
      </h1>
      
      <p id="hero-subtitle" class="text-xl md:text-2xl text-gray-300 mb-12 max-w-3xl mx-auto leading-relaxed opacity-0 gsap-ready">
        Gadol transforme l'apprentissage de l'Intelligence Artificielle en une expérience visuelle et intuitive. 
        Oubliez tout ce que vous savez sur la formation en ligne.
      </p>
      
      <!-- CTA Form -->
      <div id="hero-cta" class="max-w-md mx-auto opacity-0 gsap-ready">
        <form class="flex flex-col sm:flex-row gap-4">
          <input 
            type="email" 
            placeholder="Votre email" 
            class="flex-1 px-6 py-4 rounded-full bg-gray-800/50 border border-gray-700 focus:border-blue-500 focus:ring-2 focus:ring-blue-500/20 outline-none transition-all duration-300 text-white placeholder-gray-400"
            required
          />
          <button 
            type="submit"
            class="px-8 py-4 bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 rounded-full font-semibold transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl whitespace-nowrap"
          >
            Rejoindre la liste d'attente
          </button>
        </form>
      </div>
    </div>
  </div>
</section>

<script>
  import { createTimeline } from '../utils/animations';
  
  // Animation du Hero avec timeline séquentielle
  createTimeline('#hero-title', [
    { selector: '#hero-title', animation: 'fadeInUp', delay: 0.5 },
    { selector: '#hero-subtitle', animation: 'fadeInUp', delay: 0.3 },
    { selector: '#hero-cta', animation: 'fadeInUp', delay: 0.1 }
  ]);
</script>